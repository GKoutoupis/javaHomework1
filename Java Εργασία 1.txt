----------’σκηση 1----------
public class Holiday{
	
	//Attributes
	private String name;
	private int day;
	private String month;
	
	//Constractor
	public  Holiday(String name, int day, String month){
		this.name = name;
		this.day = day;
		this.month = month;
	}
	//Instance
	Holiday revolution = new Holiday("25h Martiou", 25, "Martios");
	Holiday oxi = new Holiday("28h Octombriou", 28, "Octombriou");
	//Method
	public String inSameMonth(String month){
		String  b = "false";
		if(revolution.month == oxi.month){
			b = "true";
		}
			return b;
		
		
	}
	
}

----------’σκηση 2----------
α)myObject1.printX(); απάντηση Value of x:5
β)myObject1.incrementCount(); απάντηση δεν θα εμφανίσει τίποτα απλά θα αυξήσει την count του myObject1 κατά 1 στιγμιαία
γ)MyClass.incrementCount(); απάντηση  1 error 
δ)myObject1.printCount(); απάντηση Value of count: 0 
ε)myObject2.printCount(); απάντηση Value of count: 0 
στ)myObject2.printX(); απάντηση Value of x:7
ζ)myObject1.setX(14); απάντηση error
η)myObject1.incrementCount(); απάντηση θα εμφανίσει τίποτα απλά θα αυξήσει την count του myObject1 κατά 1 στιγμιαία 
θ)myObject1.printX(); απάντηση Value of x: 5
ι)myObject1.printCount(); απάντηση Value of count:0
κ)myObject2.printCount(); απάντηση Value of count:0

----------’σκηση 3----------
α) Θα εκτυπώσει 36,0.0,Alan
β) Θα πρέπει να γράψουμε στον κατασκευαστή σε όλες τις μεταβλητές στιγμιοτύπου this.μεταβλητή στιγμιοτύπου

----------’σκηση 4----------
θα εμφανίσει -4-6-h

----------’σκηση 5----------
public class Askisi5 {  

    static double askisi5a(double[] arr) {
        double c = 0;
        for (int i = 0; i<10; i++){
            c += arr[i];
        }
        c /= 10;
        return c;
    }

    static double askisi5b(double[] arr){
        double max = arr[0];
        for (int i=1; i<10; i++){
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }

     static double askisi5c(double[] arr){
        double min = arr[0];
        for (int i=1; i<10; i++){
            if (arr[i] < min) {
                min = arr[i];
            }
        }
        return min;
    }

    static void myCopy(double[] arr, double[] arr2){
        for (int i=1; i<10; i++){
            arr2[i] = arr[i];
        }
    }

    public static void main(String[] args) {
        double[] grades = {7, 9, 10, 8.5, 8, 9.5, 2, 4, 7, 8};
        System.out.println(askisi5a(grades));
        System.out.println(askisi5b(grades));
        System.out.println(askisi5c(grades));
        double[] grades_backup = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        myCopy(grades, grades_backup);
    }
}

----------’σκηση 6----------
a)
public class Employee{
	public String employeeName;
	public int salary;
	public String address;

	public Employee(){
		this("Bob Day");
	}

	public Employee(String name){
		this(name,1200);
	}
	public Employee(String name, int salary) {
 	this(name, salary, "Patission 76");
 	}
 	public Employee(String name, int salary, String address) {
 	this.employeeName=name;
 	this.salary=salary;
 	this.address=address;
	 }

 	void disp() {
 	System.out.println("Employee Name: "+ employeeName);
 	System.out.println("Employee Salary: "+salary);
 	System.out.println("Employee Address: "+address);
		 }
	 public static void main(String[] args) {
	 Employee obj = new Employee();
	 obj.disp();
 	} 

	}

b)Καλούνται κατά αύξουσα σειρά των παραμέτρων που παίρνουν ως ορίσματα στις μεθόδους που υλοποιούν το αντικείκενο obj
Δηλαδή πρώτα καλείται η

	public Employee(){
		this("Bob Day");
	}
	
Μετά η 

	public Employee(String name){
		this(name,1200);
	}

Μετά
 	public Employee(String name, int salary) {
 	this(name, salary, "Patission 76");
 	}


Και τέλος

	public Employee(String name, int salary, String address) {
 	this.employeeName=name;
 	this.salary=salary;
 	this.address=address;
 	}

 γ )Το τελευταίο this δεν είναι απαραίτητο καθώς έχουν ήδη δημιουργηθέι τρία instances από τον constructor 

 	public Employee(String name, int salary) {
 	this(name, salary, "Patission 76");
	 }

----------’σκηση 7----------
α) 
100
100
101
101
102
102
103
103
104
104
105
105
106
106
107
107
108
108
109
109


β)Κάθε φορά που εκτελείται η επανάληψη θα δημιουργείται ένα αντικείμενο της κλάσσης Demo.Επομένως θα δημιουργηθούν 9 αντικείμενα.


c)Θα δημιουργηθούν 9 μεταβλητές max_value επειδή ως final μπορεί να αρχικοποιηθεί μόνο μία φορά.Επομένως κάθε νέο αντικείμενο που δημιουργείται δημιουργεί και μια μεταβλητή max value .Δεν μπορούμε να ξαναδώσουμε τιμή σε μια final μεταβήτή για αυτό δημιουργείται νέα σε κάθε δημιουργία αντικειμένου obj της κλάσης Demo


d) Θα δημιουργηθεί 1 μεταβλητή max_all.Ως static θα αλλάζει τιμή κάθε φορά που δημιουργούμε ενα νέο αντικείμενο obj της κλάσης demo .Η μεταβλητή max all κάνει ovrwrite την προηγουμενη τιμή και η νέα τιμή είναι διθέσιμη σε όλα τα instances του αντικειμένου. 

----------’σκηση 8----------
class DemoOv {
 void disp(double a, double b) {
 System.out.println("Method A");
 }
 void disp(int a, double b, double c) {
 System.out.println("Method B");
 }
 void disp(int a, float b) {
 System.out.println("Method C");
 }
 public double myMethod(int num1, int num2) {
 System.out.println("First myMethod of class Demo");
 return num1+num2;
 }
 public int myMethod2(int var1, int var2) {
 System.out.println("Second myMethod of class Demo");
 return var1-var2;
 }
 public static void main(String args[]) {
 DemoOv obj = new DemoOv();
 obj.disp(100, 20.67f);
 obj.disp(100.0, 20.67);
 obj.disp(100, 20.67);
 obj.disp(100, (float) 20.67);
 obj.disp(100, 20.67f, 20.7);
 double rd=obj.myMethod(10,10);
 int ri=obj.myMethod2(20,12);
 } 
}

Θα τυπώσει:
 β) Method C
 γ) Method A
 δ) Method A
 ε) Method C
 στ)Method B

----------’σκηση 9----------
α) Θα τυπώσει:
 1. X: 1 Y: 2
 2. X: 3 Y : 4
 3. X: 100 Y: 200
 4. X: 3 Y : 4
β)
 public class Point {
 int x,y;
 public Point(int i, int j) {
 x=i;
 y=j;
 }
 public void tricky(Point arg1, Point arg2) {
 arg1.x = 3;
 arg1.y = 4;
 arg2.x = 100;
 arg2.y = 200;
 }
 public static void main(String [] args) {
 Point pnt1 = new Point(1,2);
 Point pnt2 = new Point(3,4);
 System.out.println("1. X: " + pnt1.x + " Y: " +pnt1.y);
 System.out.println("2. X: " + pnt2.x + " Y: " +pnt2.y);
 pnt1.tricky(pnt1,pnt2);
 System.out.println("3. X: " + pnt1.x + " Y: " +pnt1.y);
 System.out.println("4. X: " + pnt2.x + " Y: " +pnt2.y);
 }
} 